
version = '0.6.1-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

repositories {
   mavenCentral()
}

dependencies {
   compile("org.slf4j:slf4j-api:1.7.25")
   compile("org.rxtx:rxtx:2.1.7")

   //annotationProcessor("org.projectlombok:lombok:1.16.20")
   compileOnly("org.projectlombok:lombok:1.16.20")
   testCompileOnly("org.projectlombok:lombok:1.16.20")

   compile("org.scream3r:jssc:2.8.0")
   compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.3.1'
   compile group: 'org.apache.commons', name: 'commons-math3', version: '3.4.1'


   testCompile("ch.qos.logback:logback-classic:1.2.3")
   testCompile("junit:junit:4.12")
   testCompile("org.hamcrest:hamcrest-all:1.3")
   testCompile("org.mockito:mockito-all:1.10.19")
}

//Wrapper
task wrapper(type: Wrapper) {
   description = 'Generates gradlew[.bat] scripts'
   gradleVersion = '4.7'
}

compileJava.options.encoding = 'UTF-8'

//Compile
compileJava {
   sourceCompatibility = 1.8
   targetCompatibility = 1.8
}

//Jar
jar {
   baseName = "${rootProject.name}"
   manifest {
      from file("${projectDir}/src/main/resources/META-INF/MANIFEST.MF")
   }
}

//Fat Jar
task fatJar(type: Jar) {
   baseName = "${rootProject.name}" + "-all"
   manifest {
      from file("${projectDir}/src/main/resources/META-INF/MANIFEST.MF")
   }
   from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
   with jar
}

//Deploy on Brick
buildscript {
   repositories {
      maven {
         url "https://plugins.gradle.org/m2/"
      }
   }
   dependencies {
      classpath "org.hidetake:gradle-ssh-plugin:2.0.0"
   }
}
apply plugin: 'org.hidetake.ssh'

apply from: 'deploy.gradle'



